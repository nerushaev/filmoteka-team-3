{"mappings":"AAAA,MAAMA,EAAO,CACXC,QAAS,mCACTC,YAAa,kDACbC,WAAY,gDACZC,WAAY,4CAEZC,YAAa,aACbC,qBAAsB,oBACtBC,mBAAoB,kBACpBC,mBAAoB,kBAEpBC,aAAcC,SAASC,cAAc,oBACrCC,WAAYF,SAASC,cAAc,gBACnCE,YAAaH,SAASC,cAAc,mBACpCG,mBAAoBJ,SAASC,cAAc,6BAC3CI,kBAAmBL,SAASC,cAAc,wBAC1CK,oBAAqBN,SAASC,cAAc,0BAC5CM,kBAAmBP,SAASC,cAAc,wBAC1CO,gBAAiBR,SAASC,cAAc,iBACxCQ,kBAAmBT,SAASC,cAAc,iBAC1CS,gBAAiBV,SAASC,cAAc,eACxCU,wBAAyBX,SAASC,cAAc,0BAEhDW,QAAS,mCAIWZ,SAASC,cAAc,kBAC7BD,SAASC,cAAc,cAChBD,SAASC,cAAc,sBC3BvC,SAASY,EAAqBC,GACnC,MAAMC,EAAaC,aAAaC,QAAQ3B,EAAKK,aACvCuB,EAAiBC,KAAKC,MAAML,GAAYM,WACxCC,EAASR,EAAYS,KACzBC,GAAWN,EAAeO,MAAKC,GAASA,EAAMC,IAAMH,IAASI,OAU/D,OAPIN,EAAOO,OAAS,GAClBP,EAAOQ,OAAO,GACdR,EAAO,GAAK,SACe,IAAlBA,EAAOO,SAChBP,EAAO,GAAK,iBAGPA,EAAOS,KAAK,K,KCUrBC,EAAe,C,KA1BF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBhB,KAAKiB,UAAUF,GACvClB,aAAaqB,QAAQJ,EAAKE,E,CAC1B,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCP,IACX,IACE,MAAME,EAAkBnB,aAAaC,QAAQgB,GAC7C,OAA2B,OAApBE,OAA2BM,EAAYtB,KAAKC,MAAMe,E,CACzD,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BP,IACb,IACEjB,aAAa0B,WAAWT,E,CACxB,MAAOK,GACPC,QAAQD,MAAMA,EAAME,Q,ICQxB,SAASG,EAAoBC,GACzBL,QAAQM,IAAI,OAAQD,GACtB,MAAME,EAASF,EACZrB,KAAI,EAACI,GAAEA,EAAEoB,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,KAChD,+IAGQJ,EACI,4CAA4CpB,WAAYrC,EAAKsB,UAAUmC,WAAqBG,MAC5F,4CAA4CvB,gFAAiFuB,0FAI5HA,EACI,oCAAoCA,SACpC,oCAAoCE,gHAIrCJ,EACI,oBAAoBnC,EAClBmC,KAEF,MAEzBC,EACI,2BAA2BA,EAAaI,MAAM,EAAG,YACjD,4CAEkBF,EAAaG,QAAQ,mHAM9CvB,KAAK,IAENQ,QAAQM,IAAIC,GACZxD,EAAKqB,wBAAwB4C,mBAAmB,aAAcT,E,CAhElExD,EAAKmB,kBAAkB+C,iBAAiB,SAGxCC,eAAgCC,GAC5BA,EAAIC,iBACJrE,EAAKmB,kBAAkBmD,UAAUC,IAAI,kBACrCvE,EAAKoB,gBAAgBkD,UAAUE,OAAO,kBAEtCvB,QAAQM,IAAIvD,EAAKqB,yBAGjB,MAAMiC,QAAaZ,EAAQ+B,KAAKzE,EAAKQ,oBACrCyC,QAAQM,IAAID,GACZD,EAAoBC,E,IAZxBtD,EAAKoB,gBAAgB8C,iBAAiB,SAetCC,eAA8BC,GAC3BA,EAAIC,iBACHrE,EAAKoB,gBAAgBkD,UAAUC,IAAI,kBACnCvE,EAAKmB,kBAAkBmD,UAAUE,OAAO,kBAExC,MAAMlB,QAAaZ,EAAQ+B,KAAKzE,EAAKO,oBACrC0C,QAAQM,IAAID,GACZD,EAAoBC,E","sources":["src/js/refs.js","src/js/formattedGenresOnHomePage.js","src/js/storage.js","src/js/renderMarkupLibrary.js"],"sourcesContent":["const refs = {\n  API_KEY: 'ade224e438a5cac910232dacab4d697a',\n  POPULAR_URL: 'https://api.themoviedb.org/3/trending/movie/day',\n  GENRES_URL: 'https://api.themoviedb.org/3/genre/movie/list',\n  SEARCH_URL: 'https://api.themoviedb.org/3/search/movie',\n\n  STORAGE_KEY: 'genres_key',\n  LS_KEY_POPULAR_MOVIE: 'popular_movie_key',\n  LS_KEY_QUERY_MOVIE: 'query_movie_key',\n  LS_KEY_WATCH_MOVIE: 'watch_movie_key',\n\n  gallerySetEL: document.querySelector('.js-gallery__set'),\n  backdropEl: document.querySelector('.js-backdrop'),\n  modalInfoEL: document.querySelector('.js-modal__info'),\n  containerModalInfo: document.querySelector('.js-film__container--info'),\n  closeBtnModalInfo: document.querySelector('.js-btn__info--close'),\n  watchedBtnModalInfo: document.querySelector('.js-btn__info--watched'),\n  queueBtnModalInfo: document.querySelector('.js-btn__info--queue'),\n  homePageGallery: document.querySelector('.gallery__set'),\n  watchedBtnLibrary: document.querySelector('.lib__watched'),\n  queueBtnLibrary: document.querySelector('.lib__queue'),\n  galleryContainerLibrary: document.querySelector('.gallery__library__set'),\n\n  IMG_URL: 'https://image.tmdb.org/t/p/w500',\n};\n\nconst userSearch = {\n  userSearchInputRef: document.querySelector('.header__input'),\n  searchButton: document.querySelector('.form-icon'),\n  formNotificationErr: document.querySelector('.form-notification'),\n};\n\nexport { refs, userSearch };\n","import { refs } from './refs';\n\nexport function renderGenresHomePage(idFilmGenre) {\n  const genresList = localStorage.getItem(refs.STORAGE_KEY);\n  const genresListFind = JSON.parse(genresList).genresData;\n  const ganres = idFilmGenre.map(\n    element => genresListFind.find(genre => genre.id == element).name\n  );\n\n  if (ganres.length > 3) {\n    ganres.splice(3);\n    ganres[2] = 'Other';\n  } else if (ganres.length === 0) {\n    ganres[0] = 'Genre unknown';\n  }\n\n  return ganres.join(', ');\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport default {\n  save,\n  load,\n  remove,\n};","import { refs } from './refs';\nimport { renderGenresHomePage } from './formattedGenresOnHomePage';\nimport storage from './storage';\n\nrefs.watchedBtnLibrary.addEventListener('click', onWatchedLibrary);\nrefs.queueBtnLibrary.addEventListener('click', onQueueLibrary);\n\nasync function onWatchedLibrary(evt) {\n    evt.preventDefault();\n    refs.watchedBtnLibrary.classList.add('btn__is-active');\n    refs.queueBtnLibrary.classList.remove('btn__is-active');\n\n    console.log(refs.galleryContainerLibrary);\n\n\n    const data = await storage.load(refs.LS_KEY_WATCH_MOVIE);\n    console.log(data);\n    renderMarkupLibrary(data);\n}\n\nasync function onQueueLibrary(evt) {\n   evt.preventDefault();\n    refs.queueBtnLibrary.classList.add('btn__is-active');\n    refs.watchedBtnLibrary.classList.remove('btn__is-active');\n \n    const data = await storage.load(refs.LS_KEY_QUERY_MOVIE);\n    console.log(data);\n    renderMarkupLibrary(data);\n}\n\nfunction renderMarkupLibrary(data) {\n    console.log('data', data);\n  const markup = data\n    .map(({ id, poster_path, genre_ids, release_date, title, vote_average }) => {\n      return `<li class=\"gallery__item\">\n                <a  class=\"gallery__item__link\"  target=\"_blank\" rel=\"noopener noreferrer\">\n                   ${\n                     poster_path\n                       ? `<img class=\"gallery__item__img\" data-id=\"${id}\" src=\"${refs.IMG_URL}${poster_path}\" alt=\"${title}\">`\n                       : `<img class=\"gallery__item__img\" data-id=\"${id}\" src=\"https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg\" alt=\"${title}\">`\n                   } \n                    <div class=\"gallery__item__text\">\n                        ${\n                          title\n                            ? `<h3 class=\"gallery__item__title\">${title}</h3>`\n                            : `<h3 class=\"gallery__item__title\">${original_name}</h3>`\n                        }\n                        <div class=\"gallery__item__descr\">\n                           ${\n                             genre_ids\n                               ? `<p class=\"genre\">${renderGenresHomePage(\n                                   genre_ids\n                                 )}`\n                               : ''\n                           } ${\n        release_date\n          ? `| <span class=\"genre\">  ${release_date.slice(0, 4)}</span>`\n          : ''\n      } </p>    \n       <span class=\"rating\">${vote_average.toFixed(1)}</span>\n                        </div>\n                    </div>\n                </a>\n            </li>`;\n    })\n    .join('');\n\n    console.log(markup);\n    refs.galleryContainerLibrary.insertAdjacentHTML(\"afterbegin\", markup);\n       // ('beforeend', markup);\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","API_KEY","POPULAR_URL","GENRES_URL","SEARCH_URL","STORAGE_KEY","LS_KEY_POPULAR_MOVIE","LS_KEY_QUERY_MOVIE","LS_KEY_WATCH_MOVIE","gallerySetEL","document","querySelector","backdropEl","modalInfoEL","containerModalInfo","closeBtnModalInfo","watchedBtnModalInfo","queueBtnModalInfo","homePageGallery","watchedBtnLibrary","queueBtnLibrary","galleryContainerLibrary","IMG_URL","$2b1a683cfd678db4$export$c760c56c05a4c9a4","idFilmGenre","genresList","localStorage","getItem","genresListFind","JSON","parse","genresData","ganres","map","element","find","genre","id","name","length","splice","join","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","value","serializedState","stringify","setItem","error","console","message","undefined","removeItem","$d8f2a5a1b724d40d$var$renderMarkupLibrary","data","log","markup","poster_path","genre_ids","release_date","title","vote_average","original_name","slice","toFixed","insertAdjacentHTML","addEventListener","async","evt","preventDefault","classList","add","remove","load"],"version":3,"file":"myLibrary.09a8fa5a.js.map"}